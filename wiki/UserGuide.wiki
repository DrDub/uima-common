#summary User Guide
#labels Featured



=== Parameters ===
  * `InputView` List of view names to process 
  * `ContextAnnotation` List of annotation names which delimits the text areas or the covered annotations to process
  * `InputAnnotation`	Ordered list of annotation names to consider as the Feature Structure index to process 
  * `InputFeature`  Feature name of the annotations whose string value will be processed
  * `OutputView` View name to consider as the view to receive the result; to be created whether `OutputAnnotation` is empty or simply to edit if `OutputAnnotation` is defined
  * `OutputAnnotation` Name of the annotation to create as the analysis result
  * `OutputFeature` Feature name of the annotation whose string value will contain the analysis result
	

=== Methods ===

La méthode `initialize`
  * Récupération de la liste des `InputView` name, `ContextAnnotation` type name, `InputAnnotation` type name
  * `OutputView` name, `OutputAnnotation` type name
  * Sachant que `InputView` et `OutputView` ont des valeurs par défaut, respectivement `_InitialView` et la valeur de l'`InputView`
  * De même `ContextAnnotation` a pour valeur par défaut `uima.tcas.DocumentAnnotation`
  * Si `InputAnnotation` ou `InputFeature` est défini, alors les deux doivent l'être 
  * Si `OutputAnnotation` ou `OutputFeature` est défini, alors les deux doivent l'être 
  * Si `OutputAnnotation` existe alors on éditera seulement l'`OutputView` pour y rajouter des annotations sinon on créera l'`OutputView` spécifiée



  * (4) O_A null => O_V à créer ; si O_V n'existe pas alors on la crée PASS ; sinon si existe FAIL
  * (1) O_V == default i.e. O_I donc FAIL car existe déjà lorsqu'on tente de créer

  * (5) O_A != null => O_V à éditer ; si O_V non existante FAIL ; si existante PASS mais offsets des annotations créées peuvent déborder de la vue
  * (2) O_V == default i.e. O_I donc PASS sans débordement d'annotations

  * (3) idem que (5,2) ; ALERT crée n annotation avec même value ; doute sur intérêt donc non implémentée
  * (6) idem que (3)

  * (7) idem que (4) ; ALERT crée n vues avec le même contenu ; doute sur intérêt donc non implémentée
  * (8) idem que (5) ; ALERT créé une même annotation sur plusieurs vues existantes distinctes ; doute sur intérêt donc non implémentée
  * (9) idem que (6)

  * 1 ou n I_A soit on traite un FSIndex de I_A soit chaque I_A les unes après les autres  
  * 1 ou n C_A on traite un FSIndex de C_A les unes après les autres  
  * 1 ou n I_V on traite les vues les unes après les autres  
# UIMA Common
# Copyright (C) 2010  Nicolas Hernandez
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.  
#
# Fichier TODO
# 2010-10-01  Nicolas Hernandez  <nicolas.hernandez@gmail.com>

	* ordered UIMAUtilitiles.subiterator
	  * http://uima.apache.org/downloads/releaseDocs/2.3.0-incubating/docs/api/org/apache/uima/cas/FSIndex.html
	  * http://uima.apache.org/downloads/releaseDocs/2.3.0-incubating/docs/api/org/apache/uima/cas/admin/FSIndexComparator.html
	  * 2.4.1.6 Type priorities http://uima.apache.org/downloads/releaseDocs/2.3.0-incubating/docs/html/references/references.html#ugr.ref.xml.component_descriptor.aes.primitive
	  * http://osdir.com/ml/apache.uima.general/2008-03/msg00030.html
	  > is there a way to programmatically define type priorities?

I was advised to look at the UIMA test suite for things like this. I
see that org.apache.uima.analysis_engine.impl.AnalysisEngine_implTest
has the following code::

TypePriorities typePriorities = new TypePriorities_impl();
TypePriorityList priorityList = typePriorities.addPriorityList();
priorityList.addType("Type1");
priorityList.addType("Type2");
desc.getAnalysisEngineMetaData().setTypePriorities(typePriorities);

Maybe that helps?
 
	* modifier le code pour setter les feature runID et componentId
	* rendre plus générique la méthode createAnnotation pour permettre avec en argument un map nom des features et valeurs des features
	* gestion des couples nom annotation, nom feature avec feature path	notamment changer le couple PARAM_OUTPUT_ANNOTATION, PARAM_OUTPUT_FEATURE avec FEATUREPATH
	* gestion des logs à la uima
	* rajouter du code test e.g. http://code.google.com/p/uutuc/
	* permettre la conversion d'encodage de l'input vers ce qui est passé en entrée du process et de la sortie du process vers ce qui est à sauvegarder 
	